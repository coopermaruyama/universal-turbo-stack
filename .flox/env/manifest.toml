## Flox Environment Manifest -----------------------------------------
##
##   _Everything_ you need to know about the _manifest_ is here:
##
##   https://flox.dev/docs/reference/command-reference/manifest.toml/
##
## -------------------------------------------------------------------
# Flox manifest version managed by Flox CLI
version = 1


## Install Packages --------------------------------------------------
##  $ flox install gum  <- puts a package in [install] section below
##  $ flox search gum   <- search for a package
##  $ flox show gum     <- show all versions of a package
## -------------------------------------------------------------------
[install]
nodejs.pkg-path = "nodejs_24"
nodejs.version = "24.7.0"
python313.pkg-path = "python313"
pnpm_10.pkg-path = "pnpm_10"
go.pkg-path = "go"
go.version = "1.25.0"
golangci-lint.pkg-path = "golangci-lint"
# sops + age for secrets management
sops.pkg-path = "sops"
age.pkg-path = "age"
awscli.pkg-path = "awscli"
ripgrep.pkg-path = "ripgrep"
uv.pkg-path = "uv"
turbo.pkg-path = "turbo"
gnugrep.pkg-path = "gnugrep"
zsh.pkg-path = "zsh"
gum.pkg-path = "gum"
docker.pkg-path = "docker"
docker-compose.pkg-path = "docker-compose"


## Environment Variables ---------------------------------------------
##  ... available for use in the activated environment
##      as well as [hook], [profile] scripts and [services] below.
## -------------------------------------------------------------------
[vars]
INTRO_MESSAGE = "âœ… Devbox activated"


## Activation Hook ---------------------------------------------------
##  ... run by _bash_ shell when you run 'flox activate'.
## -------------------------------------------------------------------
[hook]
on-activate = """
  pnpm install
  if [ ! -f .env.keys ]; then
    pnpm keys
  fi
  if [ ! -d .git/safe ]; then
   resp="$(gum choose --header \"Helpers are not enabled. Enable them now? This will update your PATH while you have the dev environment active\" \"yes\" \"no\")"
  if [ "$resp" = "yes" ]; then
    mkdir .git/safe
  fi
  fi
  docker compose up -d
"""


## Profile script ----------------------------------------------------
## ... sourced by _your shell_ when you run 'flox activate'.
## -------------------------------------------------------------------
[profile]
 common = '''
   gum style \
   --foreground 212 --border-foreground 212 --border double \
   --align center --width 50 --margin "1 2" --padding "2 4" \
     $INTRO_MESSAGE
 '''
## Shell-specific customizations such as setting aliases go here:
# bash = ...
# zsh  = ...
# fish = ...


## Services ---------------------------------------------------------
##  $ flox services start             <- Starts all services
##  $ flox services status            <- Status of running services
##  $ flox activate --start-services  <- Activates & starts all
## ------------------------------------------------------------------
[services]
web.command = "pnpm dev"


## Include ----------------------------------------------------------
## ... environments to create a composed environment
## ------------------------------------------------------------------
[include]
# environments = [
#     { dir = "../common" }
# ]


## Build and publish your own packages ------------------------------
##  $ flox build
##  $ flox publish
## ------------------------------------------------------------------
[build]
# [build.myproject]
# description = "The coolest project ever"
# version = "0.0.1"
# command = """
#   mkdir -p $out/bin
#   cargo build --release
#   cp target/release/myproject $out/bin/myproject
# """


## Other Environment Options -----------------------------------------
[options]
# Systems that environment is compatible with
# systems = [
#   "aarch64-darwin",
#   "aarch64-linux",
#   "x86_64-darwin",
#   "x86_64-linux",
# ]
# Uncomment to disable CUDA detection.
# cuda-detection = false
