services:
  postgres:
    image: postgres:17-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pguser -d app"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: valkey/valkey:8-alpine
    ports:
      - "6379:6379"
    volumes:
      - cache_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: ./apps/nextjs/Dockerfile
      args:
        NODE_VERSION: 22.14.0
        PNPM_VERSION: 10.15.1
        ENV: development
    # Uncomment to expose ports
    ports:
      - "3000:3000"
    volumes:
      - ./apps/nextjs:/app
      # dont put it in /app or it will create a copy of the .env.keys file in host
      - ./.env.keys:/.env.keys
      # exclusions
      # - /app/.venv
    environment:
      - NODE_ENV=development
      - ENV=development
      - POSTGRES_URL=postgresql://pguser:password@postgres:5432/app
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    tty: true # Keep tty open for debugging
    # Run via bash to avoid execute-bit issues from bind mounts
    command: ["bash", "/app/start.sh"]

volumes:
  postgres_data:
  cache_data:
